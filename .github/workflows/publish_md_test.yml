name: Publish output MD to GitHub Pages

on:
  workflow_dispatch:
  workflow_run:
    workflows: ["Run daily arxiv"]
    types:
      - completed

permissions: write-all

jobs:
  build:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    outputs:
      file-exists: ${{steps.file-check.outputs.file_exists}}
    steps:
    - uses: actions/checkout@v3
      with:
        ref: gh-pages
    - name: Download artifact
      id: download-artifact
      uses: dawidd6/action-download-artifact@v2
      with:
        workflow: cron_runs.yaml
        workflow_conclusion: success
        name: arxiv-scanner-outputs
    - name: Display structure of downloaded files
      run: ls -R
    - name: Check for output.md
      id: check_files
      uses: andstor/file-existence-action@v2
      with:
        files: output.md
    - name: Prepend new content to existing page
      if: steps.check_files.outputs.files_exists == 'true'
      run: |
        DATE=$(date '+%Y-%m-%d')
        DELIMITER="\n\n---\n\n"
        if [ -f existing_page.md ]; then
          echo -e "$DATE\n\n$(cat output.md)$DELIMITER$(cat existing_page.md)" > existing_page.md
        else
          echo -e "$DATE\n\n$(cat output.md)" > existing_page.md
        fi
    - name: Convert output.md to pages
      uses: wranders/markdown-to-pages-action@v0.1
      if: steps.check_files.outputs.files_exists == 'true'
      with:
       token: ${{ secrets.GITHUB_TOKEN }}
       file: existing_page.md
    - uses: actions/upload-pages-artifact@v2
      if: steps.check_files.outputs.files_exists == 'true'
      with:
        path: dist
    - name: Commit and push changes
      if: steps.check_files.outputs.files_exists == 'true'
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
        git add existing_page.md -f
        git commit -m "Update page with new content"
        git push origin gh-pages
    - uses: actions/deploy-pages@v1
      if: steps.check_files.outputs.files_exists == 'true'
      id: deployment